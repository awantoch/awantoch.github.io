{"version":3,"sources":["scripts/console.js"],"names":["resolver","resolve","options","callback","resolveString","element","getAttribute","combinedOptions","Object","assign","getRandomInteger","min","max","Math","floor","random","randomCharacter","characters","length","doRandomiserEffect","timeout","partialString","iterations","setTimeout","nextOptions","textContent","substring","doResolverEffect","offset","strings","counter","document","querySelector","$","removeClass","css"],"mappings":"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","file":"console.ab13ccf5.js","sourceRoot":"../src","sourcesContent":["// Thank you Kevin (http://codepen.io/qkevinto/pen/WQVNWO)\n\nconst resolver = {\n  resolve: function resolve(options, callback) {\n    // The string to resolve\n    const resolveString = options.resolveString || options.element.getAttribute('data-target-resolver');\n    const combinedOptions = Object.assign({}, options, {resolveString: resolveString});\n    \n    function getRandomInteger(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n    \n    function randomCharacter(characters) {\n      return characters[getRandomInteger(0, characters.length - 1)];\n    };\n    \n    function doRandomiserEffect(options, callback) {\n      const characters = options.characters;\n      const timeout = options.timeout;\n      const element = options.element;\n      const partialString = options.partialString;\n\n      let iterations = options.iterations;\n\n      setTimeout(() => {\n        if (iterations >= 0) {\n          const nextOptions = Object.assign({}, options, {iterations: iterations - 1});\n\n          // Ensures partialString without the random character as the final state.\n          if (iterations === 0) {\n            element.textContent = partialString;\n          } else {\n            // Replaces the last character of partialString with a random character\n            element.textContent = partialString.substring(0, partialString.length - 1) + randomCharacter(characters);\n          }\n\n          doRandomiserEffect(nextOptions, callback)\n        } else if (typeof callback === \"function\") {\n          callback(); \n        }\n      }, options.timeout);\n    };\n    \n    function doResolverEffect(options, callback) {\n      const resolveString = options.resolveString;\n      const characters = options.characters;\n      const offset = options.offset;\n      const partialString = resolveString.substring(0, offset);\n      const combinedOptions = Object.assign({}, options, {partialString: partialString});\n\n      doRandomiserEffect(combinedOptions, () => {\n        const nextOptions = Object.assign({}, options, {offset: offset + 1});\n\n        if (offset <= resolveString.length) {\n          doResolverEffect(nextOptions, callback);\n        } else if (typeof callback === \"function\") {\n          callback();\n        }\n      });\n    };\n\n    doResolverEffect(combinedOptions, callback);\n  } \n}\n\nconst strings = [\n  'adventurer',\n  'computer scientist',\n  'cyber security engineer',\n  'blockchain engineer',\n  'software engineer',\n  'leader',\n  'entrepreneur',\n  'collaborator',\n  'fellow human',\n  'alec wantoch'\n];\n\nlet counter = 0;\n\nconst options = {\n  // Initial position\n  offset: 0,\n  // Timeout between each random character\n  timeout: 5,\n  // Number of random characters to show\n  iterations: 10,\n  // Random characters to pick from\n  characters: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'x', 'y', 'x', '#', '%', '&', '-', '+', '_', '?', '/', '\\\\', '='],\n  // String to resolve\n  resolveString: strings[counter],\n  // The element\n  element: document.querySelector('[data-target-resolver]')\n}\n\n// Callback function when resolve completes\nfunction callback() {\n  setTimeout(() => {\n    counter ++;\n    \n    if (counter >= strings.length) {\n      counter = 0;\n    }\n    \n    let nextOptions = Object.assign({}, options, {resolveString: strings[counter]});\n    resolver.resolve(nextOptions, callback);\n  }, 1000);\n}\n\n$(function(){\n  setTimeout(()=>{\n    $('body').removeClass('fade-out');\n    $('html').css('background-color', 'white');\n    setTimeout(()=>{\n      resolver.resolve(options, callback)\n    }, 2000);\n  }, 1000);\n  \n});"]}